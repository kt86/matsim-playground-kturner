<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>org.matsim.vsp</groupId>
		<artifactId>vsp-playgrounds</artifactId>
		<version>14.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.matsim.vsp.vsp-playgrounds</groupId>
	<artifactId>gleich</artifactId>
	<name>gleich</name>

	<properties>
		<!-- release> -->
		<!--<matsim.version>14.0-SNAPSHOT</matsim.version>-->
		<!--weekly "release":-->
		<matsim.version>14.0-PR1576</matsim.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>av</artifactId>
			<version>${matsim.version}</version>
		</dependency>
		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>dvrp</artifactId>
			<version>${matsim.version}</version>
		</dependency>
		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>minibus</artifactId>
			<version>${matsim.version}</version>
		</dependency>
		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>vsp</artifactId>
			<version>${matsim.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-assembly-plugin</artifactId>
			<version>3.3.0</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<showWarnings>false</showWarnings>
					<showDeprecation>false</showDeprecation>
					<encoding>UTF-8</encoding>
					<!-- configure initial and maximal memory for compiling -->
					<fork>true</fork>
					<meminitial>128m</meminitial>
					<maxmem>512m</maxmem>
					<compilerArguments>
						<Xmaxwarns>4000</Xmaxwarns>
						<Xmaxerrs>100</Xmaxerrs>
					</compilerArguments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19</version>
				<configuration>
					<excludes>
						<exclude>**/*$*</exclude> <!-- exclude all inner classes -->
						<exclude>org/matsim/testcases/TestDepth.java</exclude>
						<exclude>org/matsim/testcases/MatsimTestCase.java</exclude>
					</excludes>
					<forkMode>once</forkMode>
					<!-- avoid out of memory errors: -->
					<argLine>-Xmx6000m -Djava.awt.headless=true -Dmatsim.preferLocalDtds=true</argLine>
					<!--necessary in tu berlin gitlab. BUT not good in other places, so solve by command line switch only where needed.  kai, nov'18-->
					<!--<useSystemClassLoader>false</useSystemClassLoader>-->
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<!--Presumably, you can run this by mvn assembly:assembly (?)-->
				<version>3.3.0</version>

				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>org.matsim.gui.RunBerlinScenarioGUI</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<!--Presumably, this plugin is thus run as part of the package phase.  So-->
						<!--you can either only run assembly:assembly, or package, where the-->
						<!--latter may run additional stuff or not.-->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>  <!-- Create sources.jar -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<build>

				<defaultGoal>assembly:assembly</defaultGoal>
				<!--(I think that the above line is the reason why mvn -Prelease works-->
				<!--without defining a goal. And it presumably only works because the-->
				<!--assemply plugin is defined above. kai, oct'19)-->

				<pluginManagement>
					<!--pluginManagement further defines plugins *if* they are loaded-->
					<!--elsewhere.  So this will only have an effect if the assembly plugin or-->
					<!--the jar plugin are loaded above.  It then reconfigures it for the-->
					<!--profile run.-->

					<plugins>
						<plugin>
							<artifactId>maven-assembly-plugin</artifactId>
							<configuration>
								<descriptors>
									<descriptor>src/main/assembly/assembly-release.xml</descriptor>
								</descriptors>
							</configuration>
						</plugin>
						<plugin>
							<artifactId>maven-jar-plugin</artifactId>
							<configuration>
								<archive>
									<manifest>
										<addClasspath>true</addClasspath>
										<classpathPrefix>libs/</classpathPrefix>
									</manifest>
								</archive>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>